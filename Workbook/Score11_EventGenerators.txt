Score11-in-Siren is a port of the Score11 music description language; see https://www.esm.rochester.edu/ears/docs/score11/index.html
Score11 is a derivative of Leland Smith SCORE language; ikt is equally well suited for transcribing music from traditional Western music notation as for describing algorithmic composition structures.  See the 2022 ICMC paper in the Doc folder for details.
Examples of original Score11
Format of an instrument block
instrument 1 0 10;	< Instrument 1 starts at time 0 and plays for 10 beats.
	parameter 3 1; 	< Each note lasts 1 beat
end;          				< This finishes the instrument block
A simple melody
i1 0 5;							< instrument 0 for 5 seconds
	p3 rh 4/8*6/4;				< rhythmic values, 1/4 note, then 6 1/8 notes...
	p4 no c4/d/e/f/g/a/b/c5;	< pitches as note names
	p5 1.0 3.0 5.0;    			< select 100% of values between 3.0 and 5.0 for amplitude
	p6 mo 5 1000 2000;		< move from 1000 to 2000 in 5 beats for parameter 6
end;

Standard parameter maps -- the SCORE-11 constant parameter meanings are:

      p1 = Instrument number
      p2 = Starting time for this note (in beats) (not normally used)
      p3 = Duration for this note (in beats)
      p4 = Pitch (or frequency)
      p5 = Amplitude value (0 - 32000)

Score11-in-Smalltalk examples
A simple scale
	[ | s11 |	s11 := (Score11 instr: 1 from: 0 to: 5)
		add: #p3 -> (#rh -> '4/8*6/4');
		add: #p4 -> (#no -> 'c4/d/e/f/g/a5/b/c');
		add: #p5 -> #(1.0 0.2 2.0);
		add: #p6 -> (#mo -> #(5 1000 2000)).
	s11 open]
Show just the rhythm
	[TimeSequenceView openOnEventList: ((Score11 instr: 1 from: 0 to: 10) 
		add: #p3 -> (#rh -> '4//8////4//'); 
		add: #p4 -> (#no -> 'c4/d/e/f/g/a/b/c5'); 
		add: #p5 -> #(1.0 1.0 5.0); 
		add: #p6 -> (#mo -> #(5 1000 2000))) 
	eventList]
Rhythmic example using triplets (1/6 notes)
	[TimeSequenceView openOnEventList: ((Score11 instr: 1 from: 0 to: 10) 
		add: #p3 -> (#rh -> '4/8*4/6*3/4/'); 
		add: #p4 -> (#no -> 'c4/d/e/f/g/a/b/c5'); 
		add: #p5 -> (#mo -> #(10 10 100));
		add: #p6 -> #(1.0 -1.0 1.0)) 
	eventList]
Example with add'l parameters
	[ | s11 |
	s11 := ((Score11 instr: 1 from: 0 to: 10) 
		add: #p3 -> (#rh -> '4/8*4/6*3/4/'); 
		add: #p4 -> (#no -> 'c4/d/e/f/g/a/b/c5'); 
		add: #p5 -> (#mo -> #(10 10 100));
		add: #p6 -> #(1.0 -1.0 1.0);
		add: #p7 -> #(0.5 1 2  0.5 100 200);
		add: #p8 -> (#se -> '10 1 3 5 7 9');
		add: #p9 -> (#mx -> #(10 1 100))).
	s11 assign: #p6 to: #position:.
	s11 assign: #p7 to: #attack:.
	s11 eventList explore ]
Demonstrate multi-segment moves
	[ | s11 |			
	s11 := ((Score11 instr: 1 from: 0 to: 10) 
		add: #p3 -> (#rh -> 16); 
		add: #p4 -> (#no -> 'c4/d/e/f/g/a5/b/c'); 		"play a scale"
		add: #p5 -> (#mo -> '7 0.2 2.0 / 3 2.0 0.2')).		"crescendo/decrescendo"
	s11 tempo: #(10 60 120).
	s11 eventList removeLast editPTV ]
Test dotted values
	[ | s11 |			
	s11 := ((Score11 instr: 1 from: 0 to: 10) 
		add: #p3 -> (#rh -> '4/4./4../8'); 
		add: #p4 -> (#no -> 'c4/d/e/f/g/a/b/c5'); 
		add: #p5 -> (#mo -> #(7 5 100  3 100 5))).
	s11 tempo: #(10 60 120).
	s11 eventList inspect ]
Test rests
	[ | s11 |	
	s11 := ((Score11 instr: 1 from: 0 to: 10) 
		add: #p3 -> (#rh -> '4/-4/8/-8'); 
		add: #p4 -> (#no -> 'c4/d/e/f/g/a/b/c5'); 
		add: #p5 -> (#mo -> '7 5 100 / 3 100 5')).
	s11 tempo: #(10 60 120).
	s11 eventList inspect ]
Test complex movex - 5 sec low-to-high pitch ranges, then 4 sec constant, then 6 sec move back to low pitch
	[ | s11 |
	s11 := ((Score11 instr: 1 from: 0 to: 15) 
		add: #p3 -> (#rh -> '16/'); 
		add: #p4 -> (#mx -> '5 100 120 , 2000 2400 /						4 2050 2060 /						6 2000 2100 , 700 1100' )).			
	s11 eventList explore ]Test complex movex 2 - more pitch range testing
	[ | s11 |
	s11 := ((Score11 instr: 1 from: 0 to: 8) 
		add: #p3 -> (#rh -> '32/'); 
		add: #p4 -> (#mx -> '3 140 190 , 400 440 /
						2 440 460 /
						3 400 400 , 150 250' )).
	s11 eventList editPTV ]

----Gesture from BatOutOfHell (STP 1983) Part 1

	[ | s11 |
	s11 := ((Score11 instr: 1 from: 0 to: 120) 
		add: #p3 -> (#mx -> '15 .4 .5 , .05 .14 /
						15 .1 .15 , .5 .4 /
						20 .5 .3 , .1 .13 /
						25 .2 .1 , .6 .6 /
						25 .5 .7 , .1 .06 /
						20 .12 .08 , .5 .5'); 
		add: #p4 -> (#mx -> '20 2000 3000 , 2000 2100 /
						20 2050 2050 /
						30 2000 2100 , 2200 1600 /
						20 2400 2500 , 2800 2000 /
						30 2400 2400 , 2200 2100'); 
		add: (#p5 -> 70);
		add: #p6 -> (#mx -> '100 1 1 , 1 1 / 20 1 1 , .9 1.1');
		add: #p7 -> #(1.0 -1.0 1.0) ).
	s11 du: 303.
	s11 assign: #p6 to: #gliss:.
	s11 assign: #p7 to: #position:.
	s11 eventList explore ]

Keywords requiring a parameter number:
	1. funcs (not implemented)
	2. move - move "number of beats for change" "first value" "second value"
	3. movex - movex "number of beats for change" "first value" "second value"
	4. notes - symbolic note names
	5. numbers - numerical sequences
	6. rhythms - rhythmic notations
	7. rlist
	8. rnotes
	9. sets - selection from sets

Keywords not using a parameter number:
	1. ampfac
	2. beat
	3. duty_factor
	4. end
	5. instrument (valid as 'i')
	6. parameter (valid as 'p')
	7. rdeviation
	8. rrests
	9. rseed
	10. tempo
	11. tfactor
