'From Squeak6.1alpha of 23 January 2023 [latest update: #22394] on 24 January 2023 at 2:54:23 pm'!ExternalLibrary subclass: #PortMIDILibrary	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'MusicIO-MIDI'!!PortMIDILibrary commentStamp: 'stp 12/9/2022 12:00' prior: 0!A PortMIDILibrary is an external library to interface with the PortMIDI library -- see https://portmedia.sourceforge.net

Instance Variables

	Interface
	port

Calls

!"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!PortMIDILibrary class	instanceVariableNames: ''!!PortMIDILibrary class methodsFor: 'instance creation' stamp: 'stp 1/17/2023 16:53'!new	"Make certain to initialize instances, or just use the class."	"	| lib |	lib := PortMIDILibrary someInstance.	lib ifNil: 		[lib := PortMIDILibrary basicNew].	^ lib"		self error: 'Do not make instances of PortMIDILibrary'! !!PortMIDILibrary class methodsFor: 'system startup' stamp: 'stp 12/27/2022 11:45:15'!initialize
	"
	self initialize
	"
	Smalltalk addToStartUpList: self after: (Smalltalk classNamed: #CStandardLibrary)! !!PortMIDILibrary class methodsFor: 'accessing' stamp: 'stp 1/17/2023 16:54'!moduleName
	"Answer the module name"
	
	^ 'libportmidi.2.0.3.dylib'! !!PortMIDILibrary class methodsFor: 'testing' stamp: 'stp 1/18/2023 12:42'!resetMIDIDriver	"Close and reopen the low-level driver"	"PortMIDILibrary resetMIDIDriver"	"PortMIDILibrary initialize"		| num |	PortModel initialize.	Smalltalk garbageCollect.	PortMIDILibrary pm_terminate.	PortMIDILibrary pm_initialize.	num := PortMIDILibrary pm_count_devices.	Transcript cr; show: 'MIDI reset; found ' , num printString , ' MIDI devices.'; cr.	PortMIDIPort listDeviceTable! !!PortMIDILibrary class methodsFor: 'testing' stamp: 'stp 12/29/2022 04:04'!testANote
	"Try playing a note."
	"PortMIDILibrary listDeviceTable"

	"PortMIDILibrary new pm_count_devices "
	"PortMIDILibrary new pm_default_input_device "
	"PortMIDILibrary new pm_default_output_device "
	"PortMIDILibrary new pm_test"

	PortMIDILibrary new pm_test! !!PortMIDILibrary class methodsFor: 'prims - initialization' stamp: 'stp 1/23/2023 17:50'!pm_close: which	"Close the selected MIDI output device/port."	<cdecl: int32_t pm_close(uint32_t) module: 'libportmidi.2.0.3.dylib' >"	<primitive: 'pm_close' module: 'PortMIDIPrims'>"	^self externalCallFailed! !!PortMIDILibrary class methodsFor: 'prims - initialization' stamp: 'stp 1/23/2023 17:50'!pm_initialize	"Start the MIDI back-end."	"PortMIDILibrary pm_initialize"		<cdecl: int32_t pm_initialize(void) module: 'libportmidi.2.0.3.dylib' >"	<primitive: 'pm_initialize' module: 'PortMIDIPrims'>"	^self externalCallFailed	! !!PortMIDILibrary class methodsFor: 'prims - initialization' stamp: 'stp 1/23/2023 17:51'!pm_open: which with: direction	"Open the selected MIDI output device/port."		<cdecl: int32_t pm_open(int32_t, uint32_t) module: 'libportmidi.2.0.3.dylib' >"	<primitive: 'pm_open' module: 'PortMIDIPrims'>"	^self externalCallFailed! !!PortMIDILibrary class methodsFor: 'prims - initialization' stamp: 'stp 1/23/2023 17:51'!pm_terminate	"Stop the MIDI back-end."	"PortMIDILibrary new pm_terminate"		<cdecl: int32_t pm_terminate(void) module: 'libportmidi.2.0.3.dylib' >"	<primitive: 'pm_terminate' module: 'PortMIDIPrims'>"	^self externalCallFailed! !!PortMIDILibrary class methodsFor: 'prims - I/O' stamp: 'stp 1/23/2023 17:51'!pm_poll: which	"The MIDI driver input process poll."	<cdecl: uint32_t pm_poll(uint32_t) module: 'libportmidi.2.0.3.dylib' >"	<primitive: 'pm_poll' module: 'PortMIDIPrims'>"		^self externalCallFailed! !!PortMIDILibrary class methodsFor: 'prims - I/O' stamp: 'stp 1/23/2023 17:51'!pm_read: which	"The MIDI driver input read prim."	<cdecl: uint64_t pm_read(uint32_t) module: 'libportmidi.2.0.3.dylib' >"	<primitive: 'pm_read' module: 'PortMIDIPrims'>"	^self externalCallFailed! !!PortMIDILibrary class methodsFor: 'prims - I/O' stamp: 'stp 1/23/2023 17:51'!pm_read_controllers: which with: lo with: hi with: array	"Read a range of controllers"	<cdecl: int32_t pm_read_controllers(uint32_t, uint32_t, uint32_t, short *) module: 'libportmidi.2.0.3.dylib' >"	<primitive: 'pm_read_controllers:' module: 'PortMIDIPrims'>"	^self externalCallFailed! !!PortMIDILibrary class methodsFor: 'prims - I/O' stamp: 'stp 1/23/2023 17:52'!pm_write_data2: which with: d1 with: d2	"Write a 2-byte MIDI Command."	<cdecl: int32_t pm_write_data2(uint32_t, char, char) module: 'libportmidi.2.0.3.dylib' >"	<primitive: 'pm_write_data2' module: 'PortMIDIPrims'>"	^self externalCallFailed! !!PortMIDILibrary class methodsFor: 'prims - I/O' stamp: 'stp 1/23/2023 17:53'!pm_write_data3: which with: d1 with: d2 with: d3	"Write a standard 3-byte MIDI Command."	<cdecl: int32_t pm_write_data3(uint32_t, char, char, char) module: 'libportmidi.2.0.3.dylib' >"	<primitive: 'pm_write_data3:' module: 'PortMIDIPrims'>"	^self externalCallFailed! !!PortMIDILibrary class methodsFor: 'prims - operations' stamp: 'stp 1/23/2023 17:50'!pm_count_devices	"Answer the number of MIDI ports"	"PortMIDILibrary pm_count_devices"		<cdecl: int32_t pm_count_devices (void) module: 'libportmidi.2.0.3.dylib' >"	<primitive: 'pm_count_devices' module: 'PortMIDIPrims'>"	^self externalCallFailed! !!PortMIDILibrary class methodsFor: 'prims - operations' stamp: 'stp 1/23/2023 17:50'!pm_default_input_device	"Answer the default MIDI input device/port."	"PortMIDILibrary new pm_default_input_device"	<cdecl: int32_t pm_default_input_device (void) module: 'libportmidi.2.0.3.dylib' >"	<primitive: 'pm_default_input_device' module: 'PortMIDIPrims'>"	^self externalCallFailed! !!PortMIDILibrary class methodsFor: 'prims - operations' stamp: 'stp 1/23/2023 17:50'!pm_default_output_device	"Answer the default MIDI output device/port."	"PortMIDILibrary new pm_default_output_device"	<cdecl: int32_t pm_default_output_device (void) module: 'libportmidi.2.0.3.dylib' >"	<primitive: 'pm_default_output_device' module: 'PortMIDIPrims'>"	^self externalCallFailed! !!PortMIDILibrary class methodsFor: 'prims - operations' stamp: 'stp 1/23/2023 17:50'!pm_dev_dir: which	"Answer the i/o direction of the selected MIDI output device/port."	<cdecl: int32_t pm_dev_dir(int32_t) module: 'libportmidi.2.0.3.dylib' >"	<primitive: 'pm_dev_dir' module: 'PortMIDIPrims'>"	^self externalCallFailed! !!PortMIDILibrary class methodsFor: 'prims - operations' stamp: 'stp 1/23/2023 17:50'!pm_get_name: which	"Answer the name of the selected MIDI output device/port."	<cdecl: const char * pm_get_name(uint32_t) module: 'libportmidi.2.0.3.dylib' >"	<primitive: 'pm_get_name' module: 'PortMIDIPrims'>"	^self externalCallFailed! !!PortMIDILibrary class methodsFor: 'prims - operations' stamp: 'stp 1/23/2023 17:51'!pm_start_controller_cacheing	"Start MIDI controller cacheing."	<cdecl: int32_t pm_start_controller_cacheing(void) module: 'libportmidi.2.0.3.dylib' >"	<primitive: 'pm_start_controller_cacheing' module: 'PortMIDIPrims'>"	^self externalCallFailed! !!PortMIDILibrary class methodsFor: 'prims - operations' stamp: 'stp 1/23/2023 17:51'!pm_stop_controller_cacheing	"Stop MIDI controller cacheing."	<cdecl: int32_t pm_stop_controller_cacheing(void) module: 'libportmidi.2.0.3.dylib' >"	<primitive: 'pm_stop_controller_cacheing' module: 'PortMIDIPrims'>"	^self externalCallFailed! !!PortMIDILibrary class methodsFor: 'prims - operations' stamp: 'stp 1/23/2023 17:52'!pm_test	"Test MIDI by playing a note.."	"PortMIDILibrary pm_test"		<cdecl: void pm_test (void) module: 'libportmidi.2.0.3.dylib' >"	<primitive: 'pm_test' module: 'PortMIDIPrims'>"	^self externalCallFailed! !PortMIDILibrary initialize!