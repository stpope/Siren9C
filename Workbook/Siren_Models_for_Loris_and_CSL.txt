Object Models for Loris and CSL

[Obsolete since SWIG no longer Smalltalk - sad]

The Siren kernel of the Loris interface is in the classes LirosSound and LirosAnalyzer. The class LorisAnalysisConfiguration represents the variables used by the analyzer.

Simple Loris tests

To load a sound file and run it, saving the result as SDIF and opening a display (read this method to see how to use the Loris API)
	[LorisSound example: '1.2a1.aiff' resolution: 70] db
	[LorisSound fromSDIF: 'horns1c.sdif']

Loris Analyzer Configuration

There is a special class that manages the Loris analyzer settings; it has an editor default Loris analyzer settings (when set to resolution of 70 Hz) are:
	hopT 0.0142857
	winWidth 70
	size 1291
	BWwid 2000
	sideLobes 90
	cropT 0.0142857
	freqDrift 35
	freqFloor 70
	ampFloor -90

Loris Sound

LorisSound is a subclass of sound that has before/after versions of a sound and methods for managing the various envelopes and analysis behaviors.

LorisEditor GUI

The LorisEditor GUI has 4 main panes: 2 for sound views, a function view, and a spectrum view. Depending on the application, these might be an original and a resynthesized sound (for tuning analysis parameters), or two different sounds (for morphing). The menu bar at the top of the editor view contains items for all the important Loris functions.

CSL Models in Siren

The CSL unit generator models are in the Siren.CSL namespace. the CSLGraph class represents an instrument or DSP patch in the same sense that a CSL instrument object does. There are numerous example methods in the CSLGraph class.

To oest a CSL graph; play a simple note
	[CSLGraph testSimpleGraph] d

Test FM
	[CSLGraph testFM]

Test processors: filtered noise
	[CSLGraph testStaticFilter]
	[CSLGraph testDynamicFilter]

Play a sound sample
	[CSLGraph testSoundFile]

Play 25 oscillators with random-walk freq and position.
	[CSLGraph testOscillatorBank]

If you have a MIDI fader box, try the following demo
	[CSLGraph testMIDIOscillatorBank]
