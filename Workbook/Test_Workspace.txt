Test Workspace - stp - 230121ToDo - known bugs	TSV zooming & selection	HSView clef redisplay	HSView background paging	ControlMorph play actions	DLV selection handles scale with zoom; they shouldn't	Function & Sound editors	CSL vocoder resynth stage	MIDIFileVoice	New transport panel	PitchClass octave bugs - (HungarianMinor root: N fa) asPitchesInOctave: 3	Ostinato doesn't wait right.Post-build testingCStandardLibrary new abs: -42 FFITestLibrary ffiPrintString: 'Hello' FFITestLibrary ffiTestChars: $A with: 32 with: 0 with: 0FFITestLibrary ffiTestInts: 100 with: 32 with: 0 with: 0 [ExternalAddress loadSymbol: 'pm_initialize' module: PortMIDILibrary moduleName][ExternalAddress loadSymbol: 'not-there' module: PortMIDILibrary moduleName][Undeclared inspect][Smalltalk garbageCollect][Utilities openUsefulExpressions][DirectoryEntry currentDirectory][DependentsFields][MIDIPort allNotesOff][MIDIPort cleanUp]New Siren GUI Tools[SirenSession openUtilityVert][VoiceDialog open]==================================Display list view examples[DisplayListView exampleRectangles][DisplayRectangle rectangleExample2]		"slow - uses rotated rects"[DisplayListView exampleLines][DisplayListView examplePolylines][DisplayListView exampleVisuals][(DisplayList stringsX: 6000 byY: 10000) display][DisplayListView exampleMixed]		"huge display list - takes a while"[DisplayList exampleHierarchical display]Display the old and new glyph catalogs[DisplayVisual displayMusicConstants]		[DisplayVisual displayMusicGlyphs]	Music notation demos[TimeSequenceView randomExample][PitchTimeView randomExample][PitchTimeView randomExample2][EventList randomSWSSExample2 editPTV][HauerSteffensView randomExampleQ][HauerSteffensView cloudExample][HauerSteffensView cloudsExample][HauerSteffensView cloudsExample2][DynamicCloud focusExample][HauerSteffensView scaleExample][HauerSteffensView scaleExample2][HauerSteffensView randomExampleQ][ExtDynamicSelectionCloud chordExample][PitchTimeView openOnEventList: EventList randomExample label: 'P T V' pianoRoll: true]Advanced Event Generators[(Peal upon: #(60 62 64 65)) eventList editPTV][Arpeggio example1]		 "Plays midi"[Score11 melody1][ExtDynamicSelectionCloud chordExample][ExtDynamicSelectionCloud chordExample2]Function views[Function functionViewExample][FunctionView multiFunctionExample][FunctionView onFunctions: (Function fromFile: 'G1.2a1.env')]--------------------------Roll timing tests[((Roll length: 6 sec rhythm: 60 note: 72) ampl: 100) eventList asSoundScore play][((Roll length: 6 sec rhythm: 60 note: 72) ampl: 100) eventList playOn: MIDIVoice default][((Roll length: 6 sec rhythm: 60 note: 72) ampl: 100) eventList 				playOn: (OSCVoice cslHost: pMapForCSLSimpleFM)]----MIDI Tests[PortMIDILibrary pm_count_devices ][PortMIDILibrary pm_default_input_device ] [PortMIDILibrary pm_default_output_device ] PortMIDILibrary pm_test: PortMIDILibrary new pm_default_output_device [PortMIDIPort listDeviceTable][PortMIDILibrary testAllNotes][ExternalLibrary clearAllCaches.][PortMIDILibrary pm_terminate][MIDIVoice scaleExample][MIDIVoice randomExample]Various verbose MIDIVoice creation methods[EventList scaleExample1 playOn: (MIDIVoice defaultOut: 1)][EventList scaleExample1 playOn: (MIDIVoice onDeviceNamed: 'Kontakt' channel: 3)][EventList scaleExample1 playOn: (MIDIVoice onDeviceNamed: 'Nord' channel: 1)][EventList scaleExample1 playOn: (MIDIVoice on: 		(MIDIDevice 			outOn: (PortMIDIPort indexOfOutNamed: '*Kontakt*') 			port: MIDIPort concreteClass default) 		channel: 3)][PortMIDIPort streams]		OSC TestsDefault CSL Synthesis Server Instruments (see CSL7/Src/IO/OSC_main.cpp)	1 - 10 ---- 10 plucked strings		 "fff" - amp, pitch, pos	11 - 20 ---- 10 FM instruments		"ffff" - dur amp pitch pos		"ffffff" - dur, ampl, c_fr, m_fr, ind, pos	21 - 30 ---- 10 FM bells		 "fffffff" - dur, ampl, pitch,  gliss, rat,  ind,  pos	31 - 34 ---- 4 sound files (words)		"ff" - amp, pos	35 - 50 ---- 16 SHARC SOS voices (different instruments)		dur, ampl, pitch, pos		dur, ampl, pitch, pos, att, dec, sus, rel	51 - 55 ---- 5 basic SHARC-spectrum instruments w vibrato		dur, ampl, pitch, pos		dur, ampl, pitch, pos, att, dec, sus, rel	56 - 61 ---- 5 SHARC-instrument additive cross-fade instruments w vibrato		dur, ampl, pitch, pos		dur, ampl, pitch, pos, att, dec, sus, rel	62 - 63 ---- 2 granular scramblers		dur, ampl	64 - 67 ---- 4 granular shifters		dur, ampl[EventScheduler interrupt; flush][OSCVoice fmExample1][OSCVoice fmExample2][OSCVoice pluckExample1][OSCVoice sndExample1][OSCVoice sndExample2][OSCVoice sharcExample1][OSCVoice bellExample1][OSCVoice vSOSExample1][OSCVoice granulatorExample1][OSCVoice granulatorExample2: 1]SndSynth TestsScorePlayerMorph new openMIDIFile - fix this----Music Font debugging[((StrikeFont familyName: 'Bravura' size: 100) asPointSize: 100) browseAllGlyphs]				[((StrikeFont familyName: 'Bravura' size: 100) asPointSize: 100) displayGlyphsFrom: 16r00E1D0 to: 16r00E1E7][((StrikeFont familyName: 'Bravura' size: 100) asPointSize: 100) displayGlyphsFrom: 16r00ECA0 to: 16r00ECB7][((StrikeFont familyName: 'Bravura' size: 100) asPointSize: 100) displayGlyphsFrom: 16r00E0A0 to: 16r00E0FC][(((StrikeFont familyName: 'Bravura' size: 100) pointSize: 100) characterFormAtCode: 16r00E1D2) 		displayOn: Display at: (256@256) clippingBox: Display boundingBox 		rule: Form paint fillColor: Color black][DisplayListView loadNoteGlyphsFromFontSized: 100]"	"load music icons from the font"DisplayVisual displayMusicGlyphs(((DisplayListView glyphs at: #StdNoteIcons) at: '1' asSymbol) image image) bitEditOffsets:	1/1 -> 6 @ 66	1/2 -> 5 @ 66(((DisplayListView glyphs at: #OtherNoteIcons) at: '4' asSymbol) image image) bitEdit	Offsets (5 @ 45)----Loading transport icons[ | folder |	DisplayListView glyphs at: #Transport put: Dictionary new.	folder := (FileDirectory default directoryNamed: 				'Siren9C/Data/Fonts/transport_icons') name, '/'.	((FileDirectory on: folder) fileNamesMatching: '*.png') do:	[ :jpg | | form |	form := (Form fromFileNamed: folder, jpg).	form := form scaledToSize: 16 @ 16.	(DisplayListView glyphs at: #Transport) at: (jpg copyUpTo: $.) asSymbol put: form]][ | gly right down left up |gly := DisplayListView glyphs at: #Transport.right := gly at: #'right-arrow'.down := right rotateBy: #right centerAt: 0@0.left := right rotateBy: #pi centerAt: 0@0.up := right rotateBy: #left centerAt: 0@0.gly at: #'down-arrow' put: down.gly at: #'left-arrow' put: left.gly at: #'up-arrow' put: up.right := gly at: #'fast-forward'.down := right rotateBy: #pi centerAt: 0@0.gly at: #'rewind' put: down.][(DisplayListView glyphs at: #Transport) explore]