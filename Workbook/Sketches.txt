Sketches for Sleeping SwordTympani - 3 swells		[[ | swell |	swell := [ :dur :pit :rhy | | el |	el := ((Roll length: dur sec rhythm: rhy note: pit) ampl: 100; inst: '/i4/pn') 			eventList scaleDurationsBy: 8.0.	el applyFunction: (LinearFunction from: #((0 0.2) (1 1))) to: #loudness.	OSCVoice play4vSampler: el].	swell value: 6 value: 60 value: 80.	6 sec wait.	swell value: 6 value: 58 value: 80.	6 sec wait.	swell value: 10 value: 56 value: 90] fork]String clouds - cresc./decresc.	[[ | du base |	base := 0.005.	10 timesRepeat:		[du := OSCVoice pluckExample1: (base to: base * 2).		du wait.		base := base + 0.007].	10 timesRepeat:		[du := OSCVoice pluckExample1: (base to: base * 2).		du wait.		base := base - 0.007]] fork]Granular drone surface	[[OSCVoice granulatorExample2: 1] fork]	[[OSCVoice granulatorExample2: 2] fork]	[[OSCVoice granulatorExample2: 3] fork]Low strings and bells		[[OSCVoice bellExample2] fork]	[OSCVoice fmExample4]			runs until the scheduler is stoppedBursts of garbled speak'n'spell	[[OSCVoice granulatorExample1] fork]Score11 examples	[[Score11 sleepingSword1] fork]	[[Score11 sleepingSword2] fork]	[[Score11 sleepingSword3] fork]Random walks	[[OSCVoice play4vSampler: 				(Walk len: 60 dur0: 0.15 pitch0: 72 vel0: 80) eventList] fork]	[[OSCVoice play4vSampler: 				(Walk len: 80 pitchSet: #(76 78 81 83) durSet: #(0.1 0.1 0.2) vel: 70)] fork]	[[OSCVoice playCSLPlucks: (Walk len: 120 durN: 0.15 pitch0: 72 vel0: 48)] fork]	[[OSCVoice play4vSampler: 		"tymp"				((Walk len: 40 dur0: 2.0 pitch0: 44 vel0: 80) inst: '/i4/pn') eventList] fork]	[[(Walk len: 40 dur0: 1.0 pitch0: 64 vel0: 80) eventList playOn: (MIDIVoice defaultOut: 11)] fork]	[[(Walk len: 40 dur0: 1.0 pitch0: 64 vel0: 80) eventList playOn: (MIDIVoice defaultOut: 12)] fork]Bell peals on MIDI glockenspiel or FM bells	[(((Peal on: #(72 74 76 77)) eventList) setAll: #loudness to: 40 vel) playOn: (MIDIVoice defaultOut: 4)]	[(((Peal on: #(72 74 76 77)) eventList) setAll: #loudness to: 80 vel) playOn: (MIDIVoice defaultOut: 3)]	[OSCVoice playCSLPlucks: (((Peal on: #(70 72 74 76 77)) eventList) setAll: #loudness to: 30 vel)]Arpeggii - assumes a MIDI synth with instruments 3 and 4 panned L/R[[	| scales roots |	scales := { HungarianMinor . Oriental . PentatonicScale . 				ChromaticScale . MelodicMinorScale . MajorScale}.	roots := { N do . N mi . N fa . N la}.	1 to: 20 do: 		[ :ind | | sca rt ar1 ar2 |		sca := scales atRandom.		rt := roots atRandom.		ar1 := Arpeggio onScale: (sca root: rt) fromOct: 3 toOct: 5 drop: 25 delay: 80 loud: 80.		ar2  := Arpeggio onScale: (sca root: rt) fromOct: 3 toOct: 5 drop: 25 delay: 85 loud: 40.		ar1 playOn: (MIDIVoice defaultOut: 3). 		(Delay forMilliseconds: 25) wait.		ar2 playOn: (MIDIVoice defaultOut: 4).		(Delay forMilliseconds: (ar1 duration asMsec value) +  250) wait ] ] fork]