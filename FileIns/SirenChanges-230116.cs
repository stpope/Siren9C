'From Squeak6.0 of 9 January 2023 [latest update: #22120] on 17 January 2023 at 7:11:05 am'!Object subclass: #Controller	instanceVariableNames: 'model view sensor deferredActionQueue lastActivityTime '	classVariableNames: 'MinActivityLapse '	poolDictionaries: ''	category: 'ST80-Controllers'!!Browser methodsFor: 'initialize-release' stamp: 'stp 1/13/2023 07:21'!switchesFrame: bottomFraction fromLeft: leftFraction width: rightFraction	^LayoutFrame new		leftFraction: leftFraction offset: 0;		topFraction: bottomFraction offset: self buttonHeight negated;		rightFraction: (leftFraction + rightFraction) offset: 0;		bottomFraction: bottomFraction offset: 0! !!Collection methodsFor: 'testing' stamp: 'stp 1/12/2023 06:49'!hasItems	"Answer whether or not the receiver has items or components."	^true! !!ByteArray methodsFor: 'converting' stamp: 'stp 1/12/2023 11:44'!swapBytes	"Answer a copy of the receiver with the even/odd bytes swapped."	"#[2 0 3 0 3 0 3 128] swapBytes"		| new1 |	new1 := self class newFrom: self.	1 to: new1 size by: 2 do: 		[ :ind | | tmp |		tmp := new1 at: ind.		new1 at: ind put: (new1 at: ind + 1).		new1 at: ind + 1 put: tmp.].	^new1! !!ByteArray methodsFor: 'converting' stamp: 'stp 1/12/2023 11:44'!swapWords	"Answer a copy of the receiver with the even/odd WORDS swapped."	"#[2 0 3 0 3 0 3 128] swapWords "		| new1 |	new1 := self class newFrom: self.	1 to: new1 size by: 4 do: 		[ :ind | | t1 |		t1 := new1 at: ind.		new1 at: ind put: (new1 at: ind + 2).		new1 at: ind + 2 put: t1.		t1 := new1 at: ind + 1.		new1 at: ind + 1 put: (new1 at: ind + 3).		new1 at: ind + 3 put: t1.].	^new1! !!Controller methodsFor: 'initialize-release' stamp: 'stp 1/14/2023 08:00'!initialize	"Initialize the state of the receiver. Subclasses should include 'super 	initialize' when redefining this message to insure proper initialization."! !!Controller methodsFor: 'model access' stamp: 'stp 1/14/2023 12:19'!model: aModel 	"Controller|model: and Controller|view: are sent by View|controller: in 	order to coordinate the links between the model, view, and controller. In 	ordinary usage, the receiver is created and passed as the parameter to 	View|controller: so that the receiver's model and view links can be set 	up by the view."	model := aModel.! !!FileList methodsFor: 'toolbuilder' stamp: 'stp 1/13/2023 10:31'!buildWith: builder	"FileList open"	| windowSpec window |	windowSpec := self buildWindowWith: builder specs: {		(self topConstantHeightFrame: self pathAndPatternHeight			fromLeft: 0			width: 1) -> [self buildPatternInputWith: builder].		(self frameOffsetFromTop: self pathAndPatternHeight			fromLeft: 0.25			width: 0.75			bottomFraction: 0.3) -> [self buildFileListWith: builder].		(self frameOffsetFromTop: self pathAndPatternHeight			fromLeft: 0			width: 0.25			bottomFraction: 1) -> [self buildDirectoryTreeWith: builder].		(0.25@0.3 corner: 1@1) -> [self buildContentPaneWith: builder].	}.	window := builder build: windowSpec.	self changed: #selectedPath.	^window! !!Float methodsFor: 'converting' stamp: 'stp 12/30/2022 16:01'!toOSCBytes: aConvertor 	"Store a float in the proper byte-endian order"	"(1.5 asIEEE32BitWord bitShift: -16) bitAnd: 16rFF"		| int |	int := self asIEEE32BitWord.	Smalltalk isBigEndian		ifTrue: [aConvertor nextPut: (int bitAnd: 16rFF).			aConvertor nextPut: ((int bitShift: -8) bitAnd: 16rFF).			aConvertor nextPut: ((int bitShift: -16) bitAnd: 16rFF).			aConvertor nextPut: ((int bitShift: -24) bitAnd: 16rFF)]		ifFalse: [aConvertor nextPut: ((int bitShift: -24) bitAnd: 16rFF).			aConvertor nextPut: ((int bitShift: -16) bitAnd: 16rFF).			aConvertor nextPut: ((int bitShift: -8) bitAnd: 16rFF).			aConvertor nextPut: (int bitAnd: 16rFF)]! !!Float methodsFor: 'printing' stamp: 'stp 1/7/2023 10:17:03'!printString: digits
	"Answer a String whose characters are a description of the receiver."

	| aStream |
	aStream := WriteStream on: (String new: 16).
	self printOn: aStream fractionDigits: digits.
	^aStream contents! !!Form class methodsFor: 'instance creation' stamp: 'stp 12/2/2022 11:48:00'!extent: extentPoint depth: bitsPerPixel fromBytes: aByteArray	"Answer an instance of me with bitmap of the given dimensions and depth from the given 32-bit PADDED-ROWS data."	^self extent: extentPoint depth: bitsPerPixel bits: aByteArray swapWords swapBytes! !!PackagePaneBrowser methodsFor: 'class list' stamp: 'stp 1/12/2023 11:49'!classList	"Answer an array of the class names of the selected category. Answer an 	empty array if no selection exists."	^ self hasSystemCategorySelected 		ifFalse: [self packageClasses]		ifTrue: [super classList]! !!PackagePaneBrowser methodsFor: 'toolbuilder' stamp: 'stp 1/13/2023 07:13'!buildDefaultBrowserWith: builder	"assemble the spec for a full 5-pane browser - package, category, class, protocol & message lists, build it and return the built but not opened morph.	the build-but-don't-open phase is factored out to support the prototypicalToolWindow facility"	"PackagePaneBrowser fullOnClass: Browser."	| max windowSpec | 	max := self wantsOptionalButtons ifTrue:[0.27] ifFalse:[0.35].	windowSpec := self buildWindowWith: builder specs: {		(0@0 corner: 0.15@max) -> [self buildPackageListWith: builder].		(0.15@0 corner: 0.35@max) -> [self buildSystemCategoryListWith: builder].		(self classListFrame: max fromLeft: 0.35 width: 0.25) -> [self buildClassListWith: builder].		(self switchesFrame: max fromLeft: 0.35 width: 0.25) -> [self buildSwitchesWith: builder].		(0.6@0 corner: 0.75@max) -> [self buildMessageCategoryListWith: builder].		(0.75@0 corner: 1@max) -> [self buildMessageListWith: builder].		(0@max corner: 1@1) -> [self buildCodePaneWith: builder].	}.	self setMultiWindowFor:windowSpec.	windowSpec defaultFocus: #packageList.	^builder build: windowSpec! !!PopUpMenu methodsFor: 'basic control sequence' stamp: 'stp 1/7/2023 10:46:55'!startUp
	"Display and make a selection from the receiver as long as the button 
	is pressed. Answer the current selection."
	
	^ self startUpWithCaption: nil! !!RealEstateAgent class methodsFor: 'settings' stamp: 'stp 1/13/2023 07:10'!windowColumnsDesired	"Answer how many separate vertical columns of windows are wanted.  5/22/96 sw"		^ Preferences reverseWindowStagger		ifTrue: [1]		ifFalse: [(self maximumUsableArea width > 640)				ifTrue: [3]				ifFalse: [1]]! !!SelectorBrowser class methodsFor: 'instance creation' stamp: 'stp 1/11/2023 09:21'!open	"Create and schedule a selector fragment window."	self new open! !